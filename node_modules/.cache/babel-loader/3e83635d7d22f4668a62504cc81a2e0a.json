{"ast":null,"code":"import Popup from\"reactjs-popup\";import React from\"react\";import\"./index.scss\";import\"reactjs-popup/dist/index.css\";import Text from\"../Text\";import Button from\"../Button\";import Modal from'react-modal';import{useDynamicColour}from\"../../hooks/useDynamicGrouColour\";// const customStyles = {\n//     content : {\n//         top                   : '50%',\n//         left                  : '50%',\n//         right                 : 'auto',\n//         bottom                : 'auto',\n//         marginRight           : '-50%',\n//         transform             : 'translate(-50%, -50%)'\n//     }\n// };\nvar Form=function Form(_ref){var _ref$backgroundColor=_ref.backgroundColor,backgroundColor=_ref$backgroundColor===void 0?\"\":_ref$backgroundColor,_ref$formName=_ref.formName,formName=_ref$formName===void 0?\"Form\":_ref$formName,isOpen=_ref.isOpen,children=_ref.children,setIsOpen=_ref.setIsOpen;// #ff7d3e\nvar _useDynamicColour=useDynamicColour(),dynamicColour=_useDynamicColour.dynamicColour;return/*#__PURE__*/React.createElement(\"div\",{className:\"form-container\"},/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,className:\"form-modal\",style:{container:{backgroundColor:'rgba(0, 0, 0, .5)'}}},/*#__PURE__*/React.createElement(\"div\",{className:'form-modal-content-container'},/*#__PURE__*/React.createElement(\"button\",{type:\"transparent\",className:\"form-close\",onClick:function onClick(){return setIsOpen(false);}},\"CLOSE\"),/*#__PURE__*/React.createElement(\"div\",{className:\"form-header\",style:{backgroundColor:backgroundColor?backgroundColor:dynamicColour}},/*#__PURE__*/React.createElement(Text,{className:\"form-name-title\",color:\"white\",animationType:\"fade-in\",type:\"kSemiBold\",size:16},formName.toUpperCase())),/*#__PURE__*/React.createElement(\"div\",{className:\"form-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-content-border\"},children)))));};export default Form;","map":{"version":3,"sources":["/Users/sb/Projects/moken-website/src/components/Form/index.js"],"names":["Popup","React","Text","Button","Modal","useDynamicColour","Form","backgroundColor","formName","isOpen","children","setIsOpen","dynamicColour","container","toUpperCase"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,CACA,MAAO,8BAAP,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAAQC,gBAAR,KAA+B,kCAA/B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA8E,+BAA3EC,eAA2E,CAA3EA,eAA2E,+BAAzD,EAAyD,yCAArDC,QAAqD,CAArDA,QAAqD,wBAA1C,MAA0C,eAAlCC,MAAkC,MAAlCA,MAAkC,CAA1BC,QAA0B,MAA1BA,QAA0B,CAAhBC,SAAgB,MAAhBA,SAAgB,CACvF;AADuF,sBAE/DN,gBAAgB,EAF+C,CAEhFO,aAFgF,mBAEhFA,aAFgF,CAIvF,mBACA,2BAAK,SAAS,CAAE,gBAAhB,eACE,oBAAC,KAAD,EAAO,MAAM,CAAEH,MAAf,CAAuB,SAAS,CAAC,YAAjC,CAA8C,KAAK,CAAE,CAACI,SAAS,CAAE,CACzDN,eAAe,CAAE,mBADwC,CAAZ,CAArD,eAII,2BAAK,SAAS,CAAE,8BAAhB,eACE,8BACE,IAAI,CAAE,aADR,CAEE,SAAS,CAAE,YAFb,CAGE,OAAO,CAAE,yBAAMI,CAAAA,SAAS,CAAC,KAAD,CAAf,EAHX,UADF,cAME,2BAAK,SAAS,CAAE,aAAhB,CAA+B,KAAK,CAAE,CAAEJ,eAAe,CAAEA,eAAe,CAAGA,eAAH,CAAqBK,aAAvD,CAAtC,eACE,oBAAC,IAAD,EACE,SAAS,CAAE,iBADb,CAEE,KAAK,CAAE,OAFT,CAGE,aAAa,CAAE,SAHjB,CAIE,IAAI,CAAE,WAJR,CAKE,IAAI,CAAE,EALR,EAOGJ,QAAQ,CAACM,WAAT,EAPH,CADF,CANF,cAiBE,2BAAK,SAAS,CAAE,cAAhB,eACE,2BAAK,SAAS,CAAE,qBAAhB,EASKJ,QATL,CADF,CAjBF,CAJJ,CADF,CADA,CAwCH,CA5CD,CA8CA,cAAeJ,CAAAA,IAAf","sourcesContent":["import Popup from \"reactjs-popup\";\nimport React from \"react\";\nimport \"./index.scss\";\nimport \"reactjs-popup/dist/index.css\";\nimport Text from \"../Text\";\nimport Button from \"../Button\";\nimport Modal from 'react-modal';\nimport {useDynamicColour} from \"../../hooks/useDynamicGrouColour\";\n\n// const customStyles = {\n//     content : {\n//         top                   : '50%',\n//         left                  : '50%',\n//         right                 : 'auto',\n//         bottom                : 'auto',\n//         marginRight           : '-50%',\n//         transform             : 'translate(-50%, -50%)'\n//     }\n// };\n\nconst Form = ({ backgroundColor = \"\", formName = \"Form\", isOpen, children, setIsOpen }) => {\n    // #ff7d3e\n    const {dynamicColour} = useDynamicColour();\n\n    return (\n    <div className={\"form-container\"}>\n      <Modal isOpen={isOpen} className=\"form-modal\" style={{container: {\n              backgroundColor: 'rgba(0, 0, 0, .5)'\n          }}}>\n      {/*<Popup trigger={<button className={\"\"}>{\"Form\"}</button>} modal nested>*/}\n          <div className={'form-modal-content-container'}>\n            <button\n              type={\"transparent\"}\n              className={\"form-close\"}\n              onClick={() => setIsOpen(false)}\n            >CLOSE</button>\n            <div className={\"form-header\"} style={{ backgroundColor: backgroundColor ? backgroundColor : dynamicColour }}>\n              <Text\n                className={\"form-name-title\"}\n                color={\"white\"}\n                animationType={\"fade-in\"}\n                type={\"kSemiBold\"}\n                size={16}\n              >\n                {formName.toUpperCase()}\n              </Text>\n            </div>\n            <div className={\"form-content\"}>\n              <div className={\"form-content-border\"}>\n                {/*<Text*/}\n                {/*  size={16}*/}\n                {/*  animationType={\"fade-in\"}*/}\n                {/*  type={\"kSemiBold\"}*/}\n                {/*  textStyles={{ letterSpacing: 4 }}*/}\n                {/*>*/}\n                {/*    */}\n                {/*</Text>*/}\n                  {children}\n              </div>\n            </div>\n          </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}