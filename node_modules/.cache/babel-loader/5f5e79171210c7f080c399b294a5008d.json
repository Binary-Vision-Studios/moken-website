{"ast":null,"code":"import _objectSpread from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useState}from'react';var fields={email:function email(value){if(!value){return'Email field is required';}if(!/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g.test(value)){return'Not valid email';}},companyName:function companyName(value){if(!value){return'Company name field is required';}},subject:function subject(value){if(!value){return'Subject field is required';}},message:function message(value){if(!value){return'Message field is required';}else if(value.length<10){return'Message length must be minimum 10 characters';}},individualEmail:function individualEmail(value){if(!value){return'';}if(!/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g.test(value)){return'';}},contactEmail:function contactEmail(value){if(!value){return'';}if(!/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g.test(value)){return'';}},password:function password(value){if(!value){return'';}if(value.length<6){return'';}},choosePassword:function choosePassword(value){if(!value){return'';}if(value.length<6){return'';}},name:function name(value){if(!value){return'Name field is required';}if(value.length<3){return'Name field should has minimum 3 characters';}}};export var validate=function validate(fieldName,value){var values=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return fields[fieldName]?fields[fieldName](value,values):'';};var propsByName={email:{type:'email'},password:{type:'password',iconName:'icEye'},choosePassword:{secureTextEntry:false,iconName:'icEye'},recoveryChoosePassword:{secureTextEntry:false,iconName:'icEye'},confirmPassword:{secureTextEntry:false,iconName:'icEye'},phoneNumber:{keyboardType:'numeric',mask:'+1 ([000]) [000] [00] [00]'},phone:{keyboardType:'numeric',mask:'+1 ([000]) [000] [00] [00]'},description:{multiline:true,label:'Project Description',fontSize:13},answer:{multiline:true,label:'Answer',fontSize:13},reason:{multiline:true,fontSize:16},numberOfDays:{mask:'[00] days',fontSize:16},disputeDescription:{multiline:true,label:'Description',fontSize:17},contactPhoneNumber:{mask:'+1 ([000]) [000] [00] [00]',label:'Contact phone number',keyboardType:'numeric'},contactEmail:{label:'Contact email'},cardNumber:{mask:'[0000] [0000] [0000] [0000]',keyboardType:'numeric'},expirationDate:{mask:'[00]/[00]',keyboardType:'numeric',containerStyle:{width:'50%'}},routingNumber:{mask:'[000000000]',keyboardType:'numeric'},accountNumber:{mask:'[000000000000]',keyboardType:'numeric'},zip:{mask:'[00000]',keyboardType:'numeric'},cvc:{mask:'[000]',containerStyle:{width:'40%'}},serviceRadius:{},currency:{},dateOfBirth:{renderDataType:'rounded'},transitNumber:{mask:'[0000] [0000] [0000] [0000]',keyboardType:'numeric'},cvv:{mask:'[000]',keyboardType:'numeric'},expiryDate:{mask:'[00] / [00]',keyboardType:'numeric'}};var getInitialErrors=function getInitialErrors(initialValues){return Object.keys(initialValues).reduce(function(acc,key){acc[key]='';return acc;},{});};export default(function(initialValues,localeSections){var _useState=useState(initialValues),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState(getInitialErrors(initialValues)),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var setValuesError=useCallback(function(fieldName,error){return setErrors(function(prevState){var copy=_objectSpread({},prevState);copy[fieldName]=error||'';return copy;});},[]);var handleChange=useCallback(function(fieldName){return function(e,extracted){e.persist();if(errors[fieldName]){var error=validate(fieldName,e.target.value,values);if(!error||error!==errors[fieldName]){setValuesError(fieldName,error);}}setValues(function(prevState){var copy=_objectSpread({},prevState);copy[fieldName]=e.target.value;return copy;});};},[errors]);var onBlur=useCallback(function(fieldName){return function(){var error=validate(fieldName,values[fieldName],values);if(error){setValuesError(fieldName,error);}};},[values]);var clearValues=function clearValues(){setValues(initialValues);};var getProps=function getProps(fieldName){return _objectSpread({},propsByName[fieldName],{key:fieldName,onChange:handleChange(fieldName),onBlur:onBlur(fieldName),errorMessage:errors[fieldName]});};var onChangeText=function onChangeText(fieldName){return handleChange(fieldName);};var isFormValid=Object.entries(values).every(function(_ref){var _ref2=_slicedToArray(_ref,2),fieldName=_ref2[0],value=_ref2[1];return!validate(fieldName,value,values);});return[values,getProps,isFormValid,errors,clearValues];});","map":{"version":3,"sources":["/Users/sb/Projects/moken-website/src/hooks/useValues.js"],"names":["useCallback","useState","fields","email","value","test","companyName","subject","message","length","individualEmail","contactEmail","password","choosePassword","name","validate","fieldName","values","propsByName","type","iconName","secureTextEntry","recoveryChoosePassword","confirmPassword","phoneNumber","keyboardType","mask","phone","description","multiline","label","fontSize","answer","reason","numberOfDays","disputeDescription","contactPhoneNumber","cardNumber","expirationDate","containerStyle","width","routingNumber","accountNumber","zip","cvc","serviceRadius","currency","dateOfBirth","renderDataType","transitNumber","cvv","expiryDate","getInitialErrors","initialValues","Object","keys","reduce","acc","key","localeSections","setValues","errors","setErrors","setValuesError","error","prevState","copy","handleChange","e","extracted","persist","target","onBlur","clearValues","getProps","onChange","errorMessage","onChangeText","isFormValid","entries","every"],"mappings":"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","sourcesContent":["import { useCallback, useState } from 'react';\nconst fields = {\n    email: (value) => {\n        if (!value) {\n            return 'Email field is required';\n        }\n        if (\n            !/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g.test(\n                value,\n            )\n        ) {\n            return 'Not valid email';\n        }\n    },\n    companyName: (value) => {\n        if (!value) {\n            return 'Company name field is required';\n        }\n    },\n    subject: (value) => {\n        if (!value) {\n            return 'Subject field is required';\n        }\n    },\n    message:(value) => {\n        if (!value) {\n            return 'Message field is required';\n        } else if(value.length < 10) {\n            return 'Message length must be minimum 10 characters'\n        }\n\n    },\n    individualEmail: (value) => {\n        if (!value) {\n            return '';\n        }\n        if (\n            !/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g.test(\n                value,\n            )\n        ) {\n            return '';\n        }\n    },\n    contactEmail: (value) => {\n        if (!value) {\n            return '';\n        }\n        if (\n            !/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g.test(\n                value,\n            )\n        ) {\n            return '';\n        }\n    },\n    password: (value) => {\n        if (!value) {\n            return '';\n        }\n        if (value.length < 6) {\n            return '';\n        }\n    },\n\n\n    choosePassword: (value) => {\n        if (!value) {\n            return '';\n        }\n        if (value.length < 6) {\n            return '';\n        }\n    },\n    name: (value) => {\n        if (!value) {\n            return 'Name field is required';\n        }\n        if (value.length < 3) {\n            return 'Name field should has minimum 3 characters';\n        }\n    },\n\n};\n\nexport const validate = (fieldName, value, values = {}) =>\n    fields[fieldName] ? fields[fieldName](value, values) : '';\n\n\n\nconst propsByName = {\n    email: {\n      type: 'email'\n    },\n    password: {\n        type: 'password',\n        iconName: 'icEye',\n    },\n    choosePassword: {\n        secureTextEntry: false,\n        iconName: 'icEye',\n    },\n    recoveryChoosePassword: {\n        secureTextEntry: false,\n        iconName: 'icEye',\n    },\n    confirmPassword: {\n        secureTextEntry: false,\n        iconName: 'icEye',\n    },\n    phoneNumber: {\n        keyboardType: 'numeric',\n        mask: '+1 ([000]) [000] [00] [00]',\n    },\n    phone: {\n        keyboardType: 'numeric',\n        mask: '+1 ([000]) [000] [00] [00]',\n    },\n    description: {\n        multiline: true,\n        label: 'Project Description',\n        fontSize: 13,\n    },\n    answer: {\n        multiline: true,\n        label: 'Answer',\n        fontSize: 13,\n    },\n    reason: {\n        multiline: true,\n        fontSize: 16,\n    },\n    numberOfDays: {\n        mask: '[00] days',\n        fontSize: 16,\n    },\n    disputeDescription: {\n        multiline: true,\n        label: 'Description',\n        fontSize: 17,\n    },\n    contactPhoneNumber: {\n        mask: '+1 ([000]) [000] [00] [00]',\n        label: 'Contact phone number',\n        keyboardType: 'numeric',\n    },\n    contactEmail: {\n        label: 'Contact email',\n    },\n    cardNumber: {\n        mask: '[0000] [0000] [0000] [0000]',\n        keyboardType: 'numeric',\n    },\n    expirationDate: {\n        mask: '[00]/[00]',\n        keyboardType: 'numeric',\n        containerStyle: {\n            width: '50%',\n        },\n    },\n    routingNumber: {\n        mask: '[000000000]',\n        keyboardType: 'numeric',\n    },\n    accountNumber: {\n        mask: '[000000000000]',\n        keyboardType: 'numeric',\n    },\n    zip: {\n        mask: '[00000]',\n        keyboardType: 'numeric',\n    },\n    cvc: {\n        mask: '[000]',\n        containerStyle: {\n            width: '40%',\n        },\n    },\n    serviceRadius: {\n    },\n    currency: {\n    },\n    dateOfBirth: {\n        renderDataType: 'rounded',\n    },\n    transitNumber: {\n        mask: '[0000] [0000] [0000] [0000]',\n        keyboardType: 'numeric',\n    },\n    cvv: {\n        mask: '[000]',\n        keyboardType: 'numeric',\n    },\n    expiryDate: {\n        mask: '[00] / [00]',\n        keyboardType: 'numeric',\n    },\n};\n\n\n\nconst getInitialErrors =(initialValues) => {\n    return Object.keys(initialValues).reduce((acc, key) => {\n        acc[key] = '';\n        return acc;\n    }, {});\n};\n\nexport default (\n    initialValues,\n    localeSections,\n) => {\n    const [values, setValues] = useState(initialValues);\n    const [errors, setErrors] = useState(getInitialErrors(initialValues));\n\n    const setValuesError = useCallback(\n        (fieldName, error)=>\n            setErrors((prevState) => {\n                const copy = { ...prevState };\n                copy[fieldName] = error || '';\n                return copy;\n            }),\n        [],\n    );\n\n    const handleChange = useCallback(\n\n        (fieldName) => (e, extracted) => {\n            e.persist()\n            if (errors[fieldName]) {\n                const error = validate(fieldName, e.target.value, values);\n                if (!error || error !== errors[fieldName]) {\n                    setValuesError(fieldName, error);\n                }\n            }\n            setValues((prevState) => {\n                const copy = { ...prevState };\n                copy[fieldName] =  e.target.value;\n                return copy;\n            });\n        },\n        [errors],\n    );\n\n    const onBlur = useCallback(\n        (fieldName) => () => {\n            const error = validate(fieldName, values[fieldName], values);\n            if (error) {\n                setValuesError(fieldName, error);\n            }\n        },\n        [values],\n    );\n\n    const clearValues = () => {\n        setValues(initialValues)\n    }\n\n    const getProps = (fieldName) => {\n        return {\n            ...propsByName[fieldName],\n            key: fieldName,\n            onChange: handleChange(fieldName),\n            onBlur: onBlur(fieldName),\n            errorMessage: errors[fieldName],\n        };\n    };\n\n    const onChangeText = (fieldName) => handleChange(fieldName);\n\n    const isFormValid = Object.entries(values).every(\n        ([fieldName, value]) => !validate(fieldName, value, values),\n    );\n\n    return [values, getProps, isFormValid, errors, clearValues];\n};\n"]},"metadata":{},"sourceType":"module"}