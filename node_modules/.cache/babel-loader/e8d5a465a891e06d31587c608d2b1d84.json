{"ast":null,"code":"import _defineProperty from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var checkShortLongTrip=function checkShortLongTrip(values){if(values.longestPossibleTrip<values.shortestPossibleTrip&&values.longestPossibleTrip!==0){return{shortestPossibleTrip:\"Shortest trip cannot be more than longest trip\"};}};var firstNameValidation=function firstNameValidation(_ref){var formatted=_ref.formatted;if(!formatted){return{firstName:\"First Name is required\"};}};var lastNameValidation=function lastNameValidation(_ref2){var formatted=_ref2.formatted;if(!formatted){return{lastName:\"Last Name is required\"};}};var emailValidation=function emailValidation(value){if(!value){return{email:\"Email is required\"};}else if(!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value)){return{email:\"Invalid email address\"};}};var passwordValidation=function passwordValidation(_ref3){var formatted=_ref3.formatted;if(!formatted){return{password:\"Password is required\"};}else if(formatted.length<6){return{password:\"Password must be at least 6 characters\"};}};var birthdayValidation=function birthdayValidation(_ref4){var formatted=_ref4.formatted;if(!formatted){return{birthday:\"Birthday is required\"};}};var cardName=function cardName(_ref5){var formatted=_ref5.formatted;if(!{formatted:formatted}){return{cardName:\"Card name is required\"};}};var cardNumber=function cardNumber(_ref6){var extracted=_ref6.extracted;if(!extracted){return{cardNumber:\"Card Number name is required\"};}else if(extracted.length!==16){return{cardNumber:\"Card Number be at least 16 characters\"};}};var expDate=function expDate(_ref7){var formatted=_ref7.formatted;if(!formatted){return{expDate:\"Expire date name is required\"};}};var cvv=function cvv(_ref8){var formatted=_ref8.formatted;if(!formatted){return{cvv:\"CVV is required\"};}else if(formatted.length>3){return{cvv:\"CVV must be at least 3 characters\"};}};var countryCode=function countryCode(code){if(!code){return{countryCode:\"Country Code is required\"};}};var phoneNumber=function phoneNumber(_ref9){var extracted=_ref9.extracted;if(!extracted){return{phoneNumber:\"Phone Number Code is required\"};}else if(extracted.length<8){return{phoneNumber:\"Phone Number must be at least 8 characters\"};}};var zipCode=function zipCode(_ref10){var formatted=_ref10.formatted;if(!formatted){return{zipCode:\"Zip Code is required\"};}else if(formatted.length<2){return{zipCode:\"Zip Code must be at least 3 characters and more\"};}};export var loginAuth=function loginAuth(values){return _objectSpread({},passwordValidation(values.password),{},emailValidation(values.email));};var signUpValidation=function signUpValidation(values){return _objectSpread({},passwordValidation(values.password),{},emailValidation(values.email),{},firstNameValidation(values.firstName),{},lastNameValidation(values.lastName));};var checkingRequired=function checkingRequired(key,value,label){if(value===undefined||value===null||value===\"\"){return _defineProperty({},key,\"\".concat(label,\" is required\"));}};var checkMinMaxValue=function checkMinMaxValue(min,max,value,keyValue){if(value<min||value>max){return _defineProperty({},keyValue,\"This value should be min \".concat(min,\" and max \").concat(max,\" characters!\"));}};var birthChecking=function birthChecking(key,data){if(data.length<14){return _defineProperty({},key,\"Not valid\");}else{var birthArray=data.split(\"/\").map(function(el){return+el.trim();});if(birthArray[0]<1940||birthArray[0]>new Date().getFullYear()-18){return _defineProperty({},key,\"Year is not valid!\");}if(birthArray[1]>12||birthArray[1]===0){return _defineProperty({},key,\"Month not valid!\");}if(birthArray[2]>31||birthArray[2]===0){return _defineProperty({},key,\"Day not valid!\");}}};var checkOnLength=function checkOnLength(value,key,length,label){if(value){if(value.length<length){return _defineProperty({},key,\"\".concat(label,\" must be \").concat(length,\" \"));}}else{return _defineProperty({},key,\"\".concat(label,\" field is require\"));}};var checkEqual=function checkEqual(first,second,key,equalLabel,equalToLabel){if(first&&second&&first!==second){return _defineProperty({},key,\"\".concat(equalLabel,\" is not equal to \").concat(equalToLabel));}};var sendEmailValidation=function sendEmailValidation(values){return _objectSpread({},emailValidation(values.email));};export default{emailValidation:emailValidation,loginAuth:loginAuth,signUpValidation:signUpValidation,sendEmailValidation:sendEmailValidation};","map":{"version":3,"sources":["/Users/sb/Projects/moken-website/src/constans/validation-rules.js"],"names":["checkShortLongTrip","values","longestPossibleTrip","shortestPossibleTrip","firstNameValidation","formatted","firstName","lastNameValidation","lastName","emailValidation","value","email","test","passwordValidation","password","length","birthdayValidation","birthday","cardName","cardNumber","extracted","expDate","cvv","countryCode","code","phoneNumber","zipCode","loginAuth","signUpValidation","checkingRequired","key","label","undefined","checkMinMaxValue","min","max","keyValue","birthChecking","data","birthArray","split","map","el","trim","Date","getFullYear","checkOnLength","checkEqual","first","second","equalLabel","equalToLabel","sendEmailValidation"],"mappings":"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","sourcesContent":["const checkShortLongTrip = (values) => {\n  if (\n    values.longestPossibleTrip < values.shortestPossibleTrip &&\n    values.longestPossibleTrip !== 0\n  ) {\n    return {\n      shortestPossibleTrip: \"Shortest trip cannot be more than longest trip\",\n    };\n  }\n};\n\nconst firstNameValidation = ({ formatted }) => {\n  if (!formatted) {\n    return { firstName: \"First Name is required\" };\n  }\n};\n\nconst lastNameValidation = ({ formatted }) => {\n  if (!formatted) {\n    return { lastName: \"Last Name is required\" };\n  }\n};\n\nconst emailValidation = (value) => {\n  if (!value) {\n    return { email: \"Email is required\" };\n  } else if (\n    !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(\n      value\n    )\n  ) {\n    return { email: \"Invalid email address\" };\n  }\n};\n\nconst passwordValidation = ({ formatted }) => {\n  if (!formatted) {\n    return { password: \"Password is required\" };\n  } else if (formatted.length < 6) {\n    return { password: \"Password must be at least 6 characters\" };\n  }\n};\n\nconst birthdayValidation = ({ formatted }) => {\n  if (!formatted) {\n    return { birthday: \"Birthday is required\" };\n  }\n};\n\nconst cardName = ({ formatted }) => {\n  if (!{ formatted }) {\n    return { cardName: \"Card name is required\" };\n  }\n};\n\nconst cardNumber = ({ extracted }) => {\n  if (!extracted) {\n    return { cardNumber: \"Card Number name is required\" };\n  } else if (extracted.length !== 16) {\n    return { cardNumber: \"Card Number be at least 16 characters\" };\n  }\n};\n\nconst expDate = ({ formatted }) => {\n  if (!formatted) {\n    return { expDate: \"Expire date name is required\" };\n  }\n};\n\nconst cvv = ({ formatted }) => {\n  if (!formatted) {\n    return { cvv: \"CVV is required\" };\n  } else if (formatted.length > 3) {\n    return { cvv: \"CVV must be at least 3 characters\" };\n  }\n};\n\nconst countryCode = (code) => {\n  if (!code) {\n    return { countryCode: \"Country Code is required\" };\n  }\n};\n\nconst phoneNumber = ({ extracted }) => {\n  if (!extracted) {\n    return { phoneNumber: \"Phone Number Code is required\" };\n  } else if (extracted.length < 8) {\n    return { phoneNumber: \"Phone Number must be at least 8 characters\" };\n  }\n};\n\nconst zipCode = ({ formatted }) => {\n  if (!formatted) {\n    return { zipCode: \"Zip Code is required\" };\n  } else if (formatted.length < 2) {\n    return { zipCode: \"Zip Code must be at least 3 characters and more\" };\n  }\n};\n\nexport const loginAuth = (values) => {\n  return {\n    ...passwordValidation(values.password),\n    ...emailValidation(values.email),\n  };\n};\n\nconst signUpValidation = (values) => {\n  return {\n    ...passwordValidation(values.password),\n    ...emailValidation(values.email),\n    ...firstNameValidation(values.firstName),\n    ...lastNameValidation(values.lastName),\n    // ...birthdayValidation(values.birthday),\n  };\n};\n\nconst checkingRequired = (key, value, label) => {\n  if (value === undefined || value === null || value === \"\") {\n    return { [key]: `${label} is required` };\n  }\n};\n\nconst checkMinMaxValue = (min, max, value, keyValue) => {\n  if (value < min || value > max) {\n    return {\n      [keyValue]: `This value should be min ${min} and max ${max} characters!`,\n    };\n  }\n};\n\nconst birthChecking = (key, data) => {\n  if (data.length < 14) {\n    return { [key]: \"Not valid\" };\n  } else {\n    const birthArray = data.split(\"/\").map((el) => +el.trim());\n\n    if (birthArray[0] < 1940 || birthArray[0] > new Date().getFullYear() - 18) {\n      return { [key]: \"Year is not valid!\" };\n    }\n    if (birthArray[1] > 12 || birthArray[1] === 0) {\n      return { [key]: \"Month not valid!\" };\n    }\n    if (birthArray[2] > 31 || birthArray[2] === 0) {\n      return { [key]: \"Day not valid!\" };\n    }\n  }\n};\n\nconst checkOnLength = (value, key, length, label) => {\n  if (value) {\n    if (value.length < length) {\n      return { [key]: `${label} must be ${length} ` };\n    }\n  } else {\n    return { [key]: `${label} field is require` };\n  }\n};\n\nconst checkEqual = (first, second, key, equalLabel, equalToLabel) => {\n  if (first && second && first !== second) {\n    return { [key]: `${equalLabel} is not equal to ${equalToLabel}` };\n  }\n};\n\nconst sendEmailValidation = (values) => {\n  return {\n    ...emailValidation(values.email),\n  };\n};\n\nexport default {\n  emailValidation,\n  loginAuth,\n  signUpValidation,\n  sendEmailValidation,\n};\n"]},"metadata":{},"sourceType":"module"}