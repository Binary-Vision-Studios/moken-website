{"ast":null,"code":"import _classCallCheck from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Animate}from\"react-move\";var AnimatedProgressProvider=/*#__PURE__*/function(_React$Component){_inherits(AnimatedProgressProvider,_React$Component);var _super=_createSuper(AnimatedProgressProvider);function AnimatedProgressProvider(){var _this;_classCallCheck(this,AnimatedProgressProvider);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.interval=undefined;_this.state={isAnimated:false};return _this;}_createClass(AnimatedProgressProvider,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.repeat){this.interval=window.setInterval(function(){_this2.setState({isAnimated:!_this2.state.isAnimated});},this.props.duration*1000);}else{this.setState({isAnimated:!this.state.isAnimated});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.clearInterval(this.interval);}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(Animate,{start:function start(){return{value:_this3.props.valueStart};},update:function update(){return{value:[_this3.props.valueEnd// this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n],timing:{duration:_this3.props.duration*1000,ease:_this3.props.easingFunction}};}},function(_ref){var value=_ref.value;return _this3.props.children(value);});}}]);return AnimatedProgressProvider;}(React.Component);AnimatedProgressProvider.defaultProps={valueStart:0};export default AnimatedProgressProvider;","map":{"version":3,"sources":["/Users/sb/Projects/moken-website/src/components/AnimatedProgressProvider/AnimatedProgressProvider.js"],"names":["React","Animate","AnimatedProgressProvider","interval","undefined","state","isAnimated","props","repeat","window","setInterval","setState","duration","clearInterval","value","valueStart","valueEnd","timing","ease","easingFunction","children","Component","defaultProps"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,YAAxB,C,GAEMC,CAAAA,wB,+YACFC,Q,CAAWC,S,OAEXC,K,CAAQ,CACJC,UAAU,CAAE,KADR,C,iHAQY,iBAEhB,GAAI,KAAKC,KAAL,CAAWC,MAAf,CAAuB,CACnB,KAAKL,QAAL,CAAgBM,MAAM,CAACC,WAAP,CAAmB,UAAM,CACrC,MAAI,CAACC,QAAL,CAAc,CACVL,UAAU,CAAE,CAAC,MAAI,CAACD,KAAL,CAAWC,UADd,CAAd,EAGH,CAJe,CAIb,KAAKC,KAAL,CAAWK,QAAX,CAAsB,IAJT,CAAhB,CAKH,CAND,IAMO,CACH,KAAKD,QAAL,CAAc,CACVL,UAAU,CAAE,CAAC,KAAKD,KAAL,CAAWC,UADd,CAAd,EAGH,CACJ,C,mEAEsB,CACnBG,MAAM,CAACI,aAAP,CAAqB,KAAKV,QAA1B,EACH,C,uCAEQ,iBACL,mBACI,oBAAC,OAAD,EACI,KAAK,CAAE,uBAAO,CACVW,KAAK,CAAE,MAAI,CAACP,KAAL,CAAWQ,UADR,CAAP,EADX,CAII,MAAM,CAAE,wBAAO,CACXD,KAAK,CAAE,CACH,MAAI,CAACP,KAAL,CAAWS,QACX;AAFG,CADI,CAKXC,MAAM,CAAE,CACJL,QAAQ,CAAE,MAAI,CAACL,KAAL,CAAWK,QAAX,CAAsB,IAD5B,CAEJM,IAAI,CAAE,MAAI,CAACX,KAAL,CAAWY,cAFb,CALG,CAAP,EAJZ,EAeK,kBAAGL,CAAAA,KAAH,MAAGA,KAAH,OAAe,CAAA,MAAI,CAACP,KAAL,CAAWa,QAAX,CAAoBN,KAApB,CAAf,EAfL,CADJ,CAmBH,C,sCAlDkCd,KAAK,CAACqB,S,EAAvCnB,wB,CAOKoB,Y,CAAe,CAClBP,UAAU,CAAE,CADM,C,CA8C1B,cAAeb,CAAAA,wBAAf","sourcesContent":["import React from \"react\";\nimport { Animate } from \"react-move\";\n\nclass AnimatedProgressProvider extends React.Component {\n    interval = undefined;\n\n    state = {\n        isAnimated: false\n    };\n\n    static defaultProps = {\n        valueStart: 0\n    };\n\n    componentDidMount() {\n\n        if (this.props.repeat) {\n            this.interval = window.setInterval(() => {\n                this.setState({\n                    isAnimated: !this.state.isAnimated\n                });\n            }, this.props.duration * 1000);\n        } else {\n            this.setState({\n                isAnimated: !this.state.isAnimated\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.interval);\n    }\n\n    render() {\n        return (\n            <Animate\n                start={() => ({\n                    value: this.props.valueStart\n                })}\n                update={() => ({\n                    value: [\n                        this.props.valueEnd\n                        // this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n                    ],\n                    timing: {\n                        duration: this.props.duration * 1000,\n                        ease: this.props.easingFunction\n                    }\n                })}\n            >\n                {({ value }) => this.props.children(value)}\n            </Animate>\n        );\n    }\n}\n\nexport default AnimatedProgressProvider;\n"]},"metadata":{},"sourceType":"module"}