{"ast":null,"code":"import _slicedToArray from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/sb/Projects/moken-website/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useMemo,useRef,useState}from\"react\";import SwiperCore,{Navigation,Virtual,Autoplay}from'swiper';import{Swiper as SwiperComponent,SwiperSlide}from'swiper/react';import'swiper/swiper.scss';import'swiper/components/navigation/navigation.scss';import'swiper/components/pagination/pagination.scss';import'swiper/components/scrollbar/scrollbar.scss';import\"react-responsive-carousel/lib/styles/carousel.min.css\";// requires a loader\nimport ArrowUpRight from\"../../images/arrow-up-right-white.svg\";import useWindowDimensions from\"../../hooks/useWindowDimensions\";import\"./index.scss\";SwiperCore.use([Navigation,Virtual,Autoplay]);var defaultBreakpoints={// when window width is >= 320px\n'0':{slidesPerView:1},'601':{slidesPerView:1.5},'650':{slidesPerView:2},// when window width is >= 480px\n'800':{slidesPerView:2.5},'1000':{slidesPerView:3},// when window width is >= 640px\n'1380':{slidesPerView:3.5},'1600':{slidesPerView:4},'1770':{slidesPerView:4.5},'1970':{slidesPerView:5}};var Swiper=function Swiper(_ref){var _ref$swiperData=_ref.swiperData,swiperData=_ref$swiperData===void 0?[]:_ref$swiperData,Component=_ref.Component,_ref$containerClassNa=_ref.containerClassName,containerClassName=_ref$containerClassNa===void 0?'':_ref$containerClassNa,_ref$slidesPerView=_ref.slidesPerView,slidesPerView=_ref$slidesPerView===void 0?4:_ref$slidesPerView,_ref$virtual=_ref.virtual,virtual=_ref$virtual===void 0?false:_ref$virtual,_ref$spaceBetween=_ref.spaceBetween,spaceBetween=_ref$spaceBetween===void 0?0:_ref$spaceBetween,_ref$breakpoints=_ref.breakpoints,breakpoints=_ref$breakpoints===void 0?defaultBreakpoints:_ref$breakpoints,_ref$withoutArrows=_ref.withoutArrows,withoutArrows=_ref$withoutArrows===void 0?false:_ref$withoutArrows,_ref$centeredSlides=_ref.centeredSlides,centeredSlides=_ref$centeredSlides===void 0?false:_ref$centeredSlides,_ref$additionalCompon=_ref.additionalComponentOptions,additionalComponentOptions=_ref$additionalCompon===void 0?{Component:function Component(){return null;},position:''}:_ref$additionalCompon,_ref$containerProps=_ref.containerProps,containerProps=_ref$containerProps===void 0?{}:_ref$containerProps,isSwiperHover=_ref.isSwiperHover,rest=_objectWithoutProperties(_ref,[\"swiperData\",\"Component\",\"containerClassName\",\"slidesPerView\",\"virtual\",\"spaceBetween\",\"breakpoints\",\"withoutArrows\",\"centeredSlides\",\"additionalComponentOptions\",\"containerProps\",\"isSwiperHover\"]);var _useWindowDimensions=useWindowDimensions(),isMobile=_useWindowDimensions.isMobile,isMiddleBiggest=_useWindowDimensions.isMiddleBiggest,isMiddleSmallest=_useWindowDimensions.isMiddleSmallest;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),isActiveIndex=_useState2[0],setIsActiveIndex=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTouching=_useState4[0],setIsTouching=_useState4[1];var prevRef=useRef(null);var nextRef=useRef(null);var swiperRef=useRef(null);// const swiper = new Swiper('.swiper-container', {\n//\n//     direction: 'vertical',\n//     mousewheelControl: true,\n//     slidesPerView: 1,\n//     // freeMode: true,\n//     // freeModeSticky: true\n// });\nvar onDragStart=function onDragStart(e){console.log('onDragStart',e);};var onDragEnd=function onDragEnd(e){console.log('onDragEnd',e);};return/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"swiper-component-container \".concat(isTouching?'grabbing':'',\" \").concat(containerClassName)},containerProps),/*#__PURE__*/React.createElement(SwiperComponent,Object.assign({shouldSwiperUpdate:true,ref:swiperRef,spaceBetween:spaceBetween,centeredSlides:centeredSlides// virtual={virtual}\n,breakpoints:breakpoints,slidesPerView:slidesPerView,wrapperTag:'ul',navigation:{prevEl:prevRef.current?prevRef.current:undefined,nextEl:nextRef.current?nextRef.current:undefined},onInit:function onInit(swiper){swiper.params.navigation.prevEl=prevRef.current;swiper.params.navigation.nextEl=nextRef.current;swiper.navigation.update();}// onSlideChange={onDragStart}\n// onReachEnd={onDragEnd}\n// onBeforeSlideChangeStart={() => console.log('onBeforeSlideChangeStart')}\n,onTouchStart:function onTouchStart(){return setIsTouching(true);},onTouchEnd:function onTouchEnd(){return setIsTouching(false);}},rest),swiperData.map(function(option,index){return/*#__PURE__*/React.createElement(SwiperSlide,{wrapperTag:'div',tag:'section',key:\"Slide content \".concat(index+1),virtualIndex:index},function(_ref2){var isActive=_ref2.isActive;return/*#__PURE__*/React.createElement(Component,Object.assign({},option,{componentIndex:index,setIsActiveIndex:setIsActiveIndex,isActiveIndex:index===isActiveIndex,key:\"explore \"+index,cursor:'grab'}));});}),/*#__PURE__*/React.createElement(SwiperSlide,{wrapperTag:'div'},/*#__PURE__*/React.createElement(\"div\",{style:{width:100}})),!withoutArrows?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{ref:prevRef,className:\"cursor-pointer button-left\"},/*#__PURE__*/React.createElement(\"img\",{src:ArrowUpRight})),/*#__PURE__*/React.createElement(\"div\",{ref:nextRef,className:\"cursor-pointer button-right\"},/*#__PURE__*/React.createElement(\"img\",{src:ArrowUpRight}))):null));};export default Swiper;","map":{"version":3,"sources":["/Users/sb/Projects/moken-website/src/components/Swiper/index.js"],"names":["React","useEffect","useMemo","useRef","useState","SwiperCore","Navigation","Virtual","Autoplay","Swiper","SwiperComponent","SwiperSlide","useWindowDimensions","use","defaultBreakpoints","slidesPerView","swiperData","Component","containerClassName","virtual","spaceBetween","breakpoints","withoutArrows","centeredSlides","additionalComponentOptions","position","containerProps","isSwiperHover","rest","isMobile","isMiddleBiggest","isMiddleSmallest","isActiveIndex","setIsActiveIndex","isTouching","setIsTouching","prevRef","nextRef","swiperRef","onDragStart","e","console","log","onDragEnd","prevEl","current","undefined","nextEl","swiper","params","navigation","update","map","option","index","isActive","width","ArrowUpRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport SwiperCore, { Navigation, Virtual, Autoplay } from 'swiper';\nimport { Swiper as SwiperComponent, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nimport ArrowUpRight from \"../../images/arrow-up-right-white.svg\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\nimport \"./index.scss\";\n\nSwiperCore.use([Navigation, Virtual, Autoplay]);\n\n\nconst defaultBreakpoints ={\n    // when window width is >= 320px\n    '0': {\n        slidesPerView: 1,\n\n    },\n\n    '601': {\n        slidesPerView: 1.5,\n    },\n    '650': {\n        slidesPerView: 2,\n    },\n    // when window width is >= 480px\n    '800': {\n        slidesPerView: 2.5,\n    },\n    '1000': {\n        slidesPerView: 3,\n    },\n    // when window width is >= 640px\n    '1380': {\n        slidesPerView: 3.5,\n    },\n    '1600': {\n        slidesPerView: 4,\n    },\n    '1770': {\n        slidesPerView: 4.5,\n    },\n\n    '1970': {\n        slidesPerView: 5,\n    },\n\n\n\n\n};\n\nconst Swiper = ({ swiperData = [], Component, containerClassName = '',\n                    slidesPerView = 4,\n                    virtual = false,\n                    spaceBetween = 0,\n                    breakpoints =defaultBreakpoints,\n                    withoutArrows = false,\n                    centeredSlides = false,\n                    additionalComponentOptions = {Component: () => null, position: ''},\n                    containerProps = {},\n                    isSwiperHover,\n                    ...rest\n                }) => {\n    const { isMobile, isMiddleBiggest, isMiddleSmallest } = useWindowDimensions();\n\n    const [isActiveIndex, setIsActiveIndex] = useState(0)\n\n    const [isTouching, setIsTouching] = useState(false);\n\n    const prevRef = useRef(null);\n    const nextRef = useRef(null);\n\n    const swiperRef = useRef(null);\n\n    // const swiper = new Swiper('.swiper-container', {\n    //\n    //     direction: 'vertical',\n    //     mousewheelControl: true,\n    //     slidesPerView: 1,\n    //     // freeMode: true,\n    //     // freeModeSticky: true\n    // });\n\n\n\n    const onDragStart = (e) => {\n        console.log('onDragStart', e);\n\n    }\n\n\n\n    const onDragEnd = (e) => {\n        console.log('onDragEnd', e);\n    }\n\n\n    return (\n      <div className={`swiper-component-container ${isTouching ? 'grabbing' : ''} ${containerClassName}`} {...containerProps}>\n          <SwiperComponent\n              shouldSwiperUpdate\n              ref={swiperRef}\n                  spaceBetween={spaceBetween}\n              centeredSlides={centeredSlides}\n                  // virtual={virtual}\n                  breakpoints={breakpoints}\n                  slidesPerView={slidesPerView}\n                  wrapperTag={'ul'}\n                   navigation={{\n                       prevEl: prevRef.current ? prevRef.current : undefined,\n                       nextEl: nextRef.current ? nextRef.current : undefined,\n                   }}\n                   onInit={(swiper) => {\n                       swiper.params.navigation.prevEl = prevRef.current;\n                       swiper.params.navigation.nextEl = nextRef.current;\n                       swiper.navigation.update();\n\n                   }}\n                  // onSlideChange={onDragStart}\n                  // onReachEnd={onDragEnd}\n                  // onBeforeSlideChangeStart={() => console.log('onBeforeSlideChangeStart')}\n                  onTouchStart={() => setIsTouching(true)}\n                  onTouchEnd={() => setIsTouching(false)}\n                  {...rest}\n\n\n          >\n              {/*{*/}\n              {/*    additionalComponentOptions ? additionalComponentOptions.Component() : null*/}\n              {/*}*/}\n                  {swiperData.map((option, index) => {\n                      return (\n                          <SwiperSlide wrapperTag={'div'} tag={'section'} key={`Slide content ${index + 1}`} virtualIndex={index}>\n                              {({ isActive }) => (\n                                    <Component\n                                      {...option}\n                                      componentIndex={index}\n                                      setIsActiveIndex={setIsActiveIndex}\n                                      isActiveIndex={index === isActiveIndex} key={\"explore \" + index} cursor={'grab'} />\n\n                              )}\n                          </SwiperSlide>\n                      )\n                  })}\n\n              <SwiperSlide wrapperTag={'div'}>\n                  <div style={{width: 100}} />\n              </SwiperSlide>\n\n              {!withoutArrows ? <>\n                  <div ref={prevRef} className=\"cursor-pointer button-left\">\n                      <img\n                          src={ArrowUpRight}\n                      />\n                  </div>\n                  <div ref={nextRef} className=\"cursor-pointer button-right\">\n                      <img\n                          src={ArrowUpRight}\n                      />\n                  </div>\n              </> : null}\n\n          </SwiperComponent>\n\n          {/*<div className={'right-side'}/>*/}\n\n      </div>\n\n  );\n};\nexport default Swiper;\n"]},"metadata":{},"sourceType":"module"}